(()=>{"use strict";var e={56:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},72:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var a={},s=[],r=0;r<e.length;r++){var l=e[r],c=o.base?l[0]+o.base:l[0],d=a[c]||0,p="".concat(c," ").concat(d);a[c]=d+1;var h=n(p),u={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==h)t[h].references++,t[h].updater(u);else{var f=i(u,o);o.byIndex=r,t.splice(r,0,{identifier:p,updater:f,references:1})}s.push(p)}return s}function i(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,i){var a=o(e=e||[],i=i||{});return function(e){e=e||[];for(var s=0;s<a.length;s++){var r=n(a[s]);t[r].references--}for(var l=o(e,i),c=0;c<a.length;c++){var d=n(a[c]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}a=l}}},98:e=>{e.exports='data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 51 48"><path fill="%23FFD700" d="M25.5 0l6.5 17h18l-14 11 5 17-15.5-10-15.5 10 5-17-14-11h18z"/></svg>'},113:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},314:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,i,a){"string"==typeof e&&(e=[[null,e,void 0]]);var s={};if(o)for(var r=0;r<this.length;r++){var l=this[r][0];null!=l&&(s[l]=!0)}for(var c=0;c<e.length;c++){var d=[].concat(e[c]);o&&s[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),i&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=i):d[4]="".concat(i)),t.push(d))}},t}},417:e=>{e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},540:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},552:(e,t,n)=>{n.d(t,{A:()=>h});var o=n(601),i=n.n(o),a=n(314),s=n.n(a),r=n(417),l=n.n(r),c=new URL(n(98),n.b),d=s()(i()),p=l()(c);d.push([e.id,`* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: Arial, sans-serif;\n    line-height: 1.6;\n    background-color: #f4f4f4;\n    color: #333;\n    padding: 20px;\n    font-size: 18px;\n}\n\n.container {\n    max-width: 1000px;\n    margin: 0 auto;\n    padding: 30px;\n    background-color: white;\n    border-radius: 10px;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\n\nh1 {\n    text-align: center;\n    margin-bottom: 30px;\n    color: #2c3e50;\n    font-size: 36px;\n}\n\n#game-container {\n    margin-bottom: 30px;\n}\n\n#sheet-music {\n    height: 300px;\n    background-color: #f9f9f9;\n    border: 1px solid #ddd;\n    margin-bottom: 30px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n#note-options {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 20px;\n    min-height: 300px;\n    position: relative;\n}\n\n.note-button {\n    padding: 15px 30px;\n    background-color: #3498db;\n    color: white;\n    border: none;\n    border-radius: 8px;\n    cursor: pointer;\n    font-size: 22px;\n    transition: background-color 0.3s;\n}\n\n.note-button:hover {\n    background-color: #2980b9;\n}\n\n/* Piano Keyboard Styles */\n.toggle-buttons {\n    display: flex;\n    justify-content: center;\n    gap: 10px;\n    margin-bottom: 15px;\n}\n\n.toggle-button {\n    padding: 8px 15px;\n    background-color: #2c3e50;\n    color: white;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    font-size: 16px;\n}\n\n.toggle-button:hover {\n    background-color: #1a2530;\n}\n\n.piano-keyboard {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    padding: 20px 10px 25px;\n    background-color: #e0e0e0;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    width: 100%;\n    margin-bottom: 20px;\n    position: relative;\n}\n\n/* Styles for dual keyboards */\n.keyboards-container {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    gap: 20px;\n}\n\n.keyboard-label {\n    font-size: 18px;\n    font-weight: bold;\n    margin-bottom: 10px;\n    color: #2c3e50;\n    text-align: center;\n}\n\n.piano-keyboard[data-clef="treble"] {\n    background-color: #e1f5fe; /* Light blue for treble clef */\n}\n\n.piano-keyboard[data-clef="bass"] {\n    background-color: #d4e6f1; /* Slightly different blue for bass clef */\n}\n\n.keyboard-keys {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    width: 100%;\n    overflow-x: auto;\n    position: relative;\n    min-height: 250px;\n    padding-bottom: 15px;\n    margin-bottom: 0;\n}\n\n.octave {\n    display: flex;\n    position: relative;\n    height: 225px;\n}\n\n.third-octave {\n    width: auto;\n}\n\n.piano-key {\n    position: relative;\n    cursor: pointer;\n    display: flex;\n    justify-content: center;\n    align-items: flex-end;\n    padding-bottom: 15px;\n    transition: all 0.2s;\n}\n\n.white-key {\n    width: 60px;\n    height: 225px;\n    background-color: white;\n    border: 1px solid #999;\n    z-index: 1;\n}\n\n.black-key {\n    width: 36px;\n    height: 135px;\n    background-color: black;\n    border: 1px solid #666;\n    z-index: 2;\n    position: absolute;\n    top: 0;\n    color: white;\n    padding-bottom: 7px;\n}\n\n.piano-key.selectable {\n    cursor: pointer;\n}\n\n.white-key.selectable:hover {\n    background-color: #e3f2fd;\n}\n\n.black-key.selectable:hover {\n    background-color: #333;\n}\n\n.piano-key.disabled {\n    opacity: 0.5;\n    cursor: default;\n}\n\n.piano-key.unavailable {\n    opacity: 0.8;\n    cursor: pointer;\n}\n\n.piano-key.unavailable:hover {\n    background-color: #f5f5f5; /* Light gray for white keys */\n}\n\n.black-key.unavailable:hover {\n    background-color: #444; /* Dark gray for black keys */\n}\n\n.note-name {\n    font-size: 18px;\n    font-weight: bold;\n}\n\n.white-key .note-name {\n    color: #333;\n}\n\n.black-key .note-name {\n    color: white;\n}\n\n/* Middle C indicator */\n.piano-key.middle-c::after {\n    content: "Middle C";\n    position: absolute;\n    bottom: -25px;\n    left: 50%;\n    transform: translateX(-50%);\n    font-size: 12px;\n    color: #e74c3c;\n    font-weight: bold;\n    white-space: nowrap;\n    width: 100%;\n    text-align: center;\n    pointer-events: none;\n    z-index: 10;\n}\n\n.piano-key.middle-c {\n    border-bottom: 4px solid #e74c3c;\n}\n\n/* Two-column layout for feedback and stats */\n#feedback-stats-container {\n    display: flex;\n    margin-top: 20px;\n    margin-bottom: 30px;\n    gap: 20px;\n}\n\n#feedback-column {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    position: relative;\n    min-height: 120px;\n}\n\n#stats-column {\n    flex: 1;\n    display: flex;\n    justify-content: center;\n}\n\n/* Top bar with profile and stats */\n#game-top-bar {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 20px;\n    background-color: #e8f4f8;\n    padding: 12px 15px;\n    border-radius: 8px;\n    border: 1px solid #b8e0ed;\n    align-items: center;\n}\n\n#profile-section, #level-section {\n    display: flex;\n    align-items: center;\n    gap: 15px;\n}\n\n#profile-name-display, #level-name-display {\n    font-size: 16px;\n    font-weight: bold;\n    color: #2c3e50;\n    padding: 8px 12px;\n    background-color: white;\n    border-radius: 6px;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n#profile-name, #level-name {\n    color: #3498db;\n    font-style: italic;\n}\n\n.top-stats {\n    display: flex;\n    align-items: center;\n    padding: 8px 12px;\n    background-color: white;\n    border-radius: 6px;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n.top-goal {\n    display: flex;\n    align-items: center;\n    padding: 8px 12px;\n    background-color: white;\n    border-radius: 6px;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n    gap: 8px;\n}\n\n.stats-icon {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 30px;\n    height: 30px;\n    background-color: #e8f4f8;\n    border-radius: 50%;\n    margin-right: 10px;\n    color: #3498db;\n    font-size: 14px;\n}\n\n.stats-info {\n    display: flex;\n    align-items: center;\n}\n\n.stats-label {\n    font-size: 14px;\n    color: #7f8c8d;\n    margin-right: 6px;\n}\n\n.stats-value {\n    font-size: 16px;\n    font-weight: bold;\n    color: #2c3e50;\n}\n\n.stats-unit {\n    font-size: 12px;\n    color: #7f8c8d;\n    margin-left: 3px;\n}\n\n.goal-title {\n    font-weight: bold;\n    font-size: 14px;\n    color: #3498db;\n}\n\n.goal-details {\n    font-size: 14px;\n}\n\n#streak-required, #speed-required {\n    font-weight: bold;\n    color: #e74c3c;\n}\n\n/* Full-width feedback area */\n#feedback-container {\n    position: relative;\n    width: 100%;\n    margin-top: 20px;\n    margin-bottom: 30px;\n    min-height: 100px;\n    display: flex;\n    justify-content: center;\n}\n\n/* Enhanced feedback styles with animation */\n#feedback {\n    text-align: center;\n    font-weight: bold;\n    font-size: 28px;\n    margin-bottom: 10px;\n    padding: 15px;\n    border-radius: 10px;\n    width: 100%;\n    max-width: 800px;\n    transition: all 0.3s ease;\n    opacity: 0;\n    transform: translateY(20px);\n}\n\n#feedback.active {\n    opacity: 1;\n    transform: translateY(0);\n}\n\n.celebration-container {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    pointer-events: none;\n    overflow: hidden;\n    z-index: 10;\n}\n\n@keyframes confetti-fall {\n    0% {\n        transform: translateY(-100%) rotate(0deg);\n        opacity: 1;\n    }\n    100% {\n        transform: translateY(100vh) rotate(720deg);\n        opacity: 0;\n    }\n}\n\n@keyframes star-appear {\n    0% {\n        transform: scale(0) rotate(0deg);\n        opacity: 0;\n    }\n    50% {\n        transform: scale(1.2) rotate(180deg);\n        opacity: 1;\n    }\n    100% {\n        transform: scale(1) rotate(360deg);\n        opacity: 0;\n    }\n}\n\n.confetti-piece {\n    position: absolute;\n    width: 10px;\n    height: 20px;\n    background-color: #f39c12;\n    top: -20px;\n    opacity: 0;\n    animation: confetti-fall 2.5s ease-out forwards;\n}\n\n.star {\n    position: absolute;\n    width: 30px;\n    height: 30px;\n    background-image: url(${p});\n    background-size: contain;\n    opacity: 0;\n    animation: star-appear 2s ease-out forwards;\n}\n\n/* Improved game stats styles */\n#game-stats {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n    padding: 15px;\n    background-color: #f8f9fa;\n    border-radius: 10px;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\n}\n\n.stats-card {\n    display: flex;\n    align-items: center;\n    padding: 12px 15px;\n    background-color: white;\n    border-radius: 8px;\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n    transition: transform 0.2s ease;\n}\n\n.stats-card:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.level-goal-card {\n    background-color: #e8f4f8;\n    border-radius: 8px;\n    padding: 12px 15px;\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n}\n\n/* Progress indicators for stats */\n.goal-met {\n    color: #2ecc71 !important;\n}\n\n.progress {\n    color: #f39c12 !important;\n}\n\n#score {\n    text-align: center;\n    font-size: 24px;\n    margin-bottom: 30px;\n}\n\n#controls {\n    display: flex;\n    justify-content: center;\n    gap: 15px;\n}\n\nbutton {\n    padding: 15px 30px;\n    background-color: #2c3e50;\n    color: white;\n    border: none;\n    border-radius: 8px;\n    cursor: pointer;\n    font-size: 22px;\n    transition: background-color 0.3s;\n}\n\nbutton:hover {\n    background-color: #1a2530;\n}\n\n/* Stats Popup Styles */\n.popup {\n    display: none;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.7);\n    z-index: 1000;\n    overflow: auto;\n}\n\n.popup-content {\n    position: relative;\n    background-color: white;\n    width: 80%;\n    max-width: 800px;\n    margin: 50px auto;\n    padding: 30px;\n    border-radius: 10px;\n    box-shadow: 0 0 20px rgba(0, 0, 0, 0.3);\n    max-height: 80vh;\n    overflow-y: auto;\n}\n\n.close-button {\n    position: absolute;\n    top: 15px;\n    right: 20px;\n    font-size: 30px;\n    font-weight: bold;\n    color: #666;\n    cursor: pointer;\n    transition: color 0.3s;\n}\n\n.close-button:hover {\n    color: #333;\n}\n\n.stats-section {\n    margin-bottom: 30px;\n}\n\n.stats-section h3 {\n    margin-bottom: 15px;\n    color: #2c3e50;\n    border-bottom: 1px solid #eee;\n    padding-bottom: 8px;\n}\n\n.stats-list {\n    font-size: 16px;\n    line-height: 1.6;\n}\n\n.note-group {\n    margin: 10px 0;\n    padding: 10px;\n    background-color: #f9f9f9;\n    border-radius: 5px;\n    border-left: 4px solid #3498db;\n}\n\n.level-item {\n    margin: 15px 0;\n    padding: 15px;\n    background-color: #f9f9f9;\n    border-radius: 5px;\n    border-left: 4px solid #2c3e50;\n}\n\n.level-title {\n    font-weight: bold;\n    font-size: 18px;\n    margin-bottom: 8px;\n    color: #2c3e50;\n}\n\n.level-description {\n    color: #666;\n    margin-bottom: 10px;\n}\n\n.level-notes {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 8px;\n}\n\n.note-tag {\n    display: inline-block;\n    padding: 4px 8px;\n    background-color: #3498db;\n    color: white;\n    border-radius: 4px;\n    font-size: 14px;\n}\n\n.note-tag.new {\n    background-color: #e74c3c;\n}\n\n/* Level selection styles */\n.level-selection {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px;\n    margin-bottom: 15px;\n}\n\n.level-button {\n    padding: 8px 15px;\n    background-color: #3498db;\n    color: white;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    font-size: 16px;\n    transition: background-color 0.3s;\n}\n\n.level-button:hover {\n    background-color: #2980b9;\n}\n\n.level-button.current {\n    background-color: #e74c3c;\n}\n\n.settings-controls {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}\n\n/* Cartoon character popup */\n.cartoon-character-popup {\n    position: fixed;\n    top: 20px;\n    right: 20px;\n    transform: scale(0.9);\n    background-color: white;\n    padding: 15px;\n    border-radius: 15px;\n    box-shadow: 0 5px 25px rgba(0, 0, 0, 0.3);\n    z-index: 1000;\n    text-align: left;\n    opacity: 0;\n    transition: all 0.3s ease;\n    max-width: 320px;\n    border: 4px solid #3498db;\n    pointer-events: none;\n    display: flex;\n    align-items: center;\n}\n\n.cartoon-character-popup.visible {\n    opacity: 1;\n    transform: scale(1);\n}\n\n.cartoon-character-popup .character-avatar {\n    width: 70px;\n    height: 70px;\n    margin-right: 15px;\n    flex-shrink: 0;\n}\n\n.cartoon-character-popup .character-avatar img {\n    width: 100%;\n    height: 100%;\n    object-fit: contain;\n    border: 2px solid #3498db;\n}\n\n.cartoon-character-popup .character-content {\n    flex: 1;\n}\n\n.cartoon-character-popup h3 {\n    font-size: 18px;\n    margin-bottom: 8px;\n    color: #2c3e50;\n}\n\n.cartoon-character-popup p {\n    font-size: 16px;\n    color: #34495e;\n    font-weight: bold;\n    margin: 0;\n}\n\n/* Show the popup when it has the 'active' class */\n.popup.active {\n    display: block;\n}\n\n/* Profile Display */\n#profile-info {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 20px;\n    background-color: #e8f4f8;\n    padding: 10px 15px;\n    border-radius: 6px;\n    border: 1px solid #b8e0ed;\n}\n\n#profile-name-display, #level-name-display {\n    font-size: 16px;\n    font-weight: bold;\n    color: #2c3e50;\n}\n\n#profile-name, #level-name {\n    color: #3498db;\n    font-style: italic;\n}\n\n/* Profiles List */\n.profiles-list {\n    margin-bottom: 15px;\n    max-height: 200px;\n    overflow-y: auto;\n    border: 1px solid #ddd;\n    border-radius: 5px;\n    padding: 5px;\n}\n\n.profile-item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 10px;\n    border-bottom: 1px solid #eee;\n    transition: background-color 0.2s;\n    cursor: pointer;\n    flex-wrap: wrap;\n}\n\n.profile-item:last-child {\n    border-bottom: none;\n}\n\n.profile-item:hover {\n    background-color: #f5f9fc;\n}\n\n.profile-item.active {\n    background-color: #e1f0fa;\n    font-weight: bold;\n}\n\n.profile-name {\n    flex-grow: 1;\n}\n\n/* Profile actions styles */\n.profile-actions {\n    margin-top: 10px;\n}\n\n.profile-add {\n    display: flex;\n    gap: 10px;\n}\n\n#new-profile-name {\n    flex-grow: 1;\n    padding: 8px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    font-size: 16px;\n}\n\n/* Inline profile editing styles */\n.profile-edit-form-inline {\n    width: 100%;\n    margin-top: 10px;\n    display: none;\n    background-color: #f9f9f9;\n    padding: 10px;\n    border-radius: 4px;\n    border: 1px solid #ddd;\n}\n\n.profile-item.editing .profile-edit-form-inline {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.profile-edit-actions {\n    display: flex;\n    justify-content: space-between;\n    margin-top: 8px;\n}\n\n.profile-edit-button {\n    background-color: #3498db;\n    color: white;\n    border: none;\n    border-radius: 4px;\n    padding: 4px 8px;\n    cursor: pointer;\n    font-size: 14px;\n}\n\n.profile-edit-button:hover {\n    background-color: #2980b9;\n}\n\n#add-profile-button {\n    background-color: #2ecc71;\n    color: white;\n    border: none;\n    border-radius: 4px;\n    padding: 8px 15px;\n    cursor: pointer;\n}\n\n#add-profile-button:hover {\n    background-color: #27ae60;\n}\n\n.edit-profile-input {\n    flex-grow: 1;\n    padding: 8px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    font-size: 16px;\n}\n\n.save-profile-button, .delete-profile-button, .cancel-edit-button {\n    padding: 8px 15px;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    font-size: 16px;\n}\n\n.save-profile-button {\n    background-color: #2ecc71;\n    color: white;\n}\n\n.save-profile-button:hover {\n    background-color: #27ae60;\n}\n\n.cancel-edit-button {\n    background-color: #7f8c8d;\n    color: white;\n}\n\n.cancel-edit-button:hover {\n    background-color: #6b7a7c;\n}\n\n.delete-profile-button {\n    background-color: #e74c3c;\n    color: white;\n}\n\n.delete-profile-button:hover {\n    background-color: #c0392b;\n}\n\n.danger {\n    background-color: #e74c3c !important;\n    color: white !important;\n}\n\n.danger:hover {\n    background-color: #c0392b !important;\n}\n\n/* Modal */\n.modal {\n    display: none;\n    position: fixed;\n    z-index: 1000;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n    background-color: rgba(0, 0, 0, 0.6);\n}\n\n.modal.active {\n    display: block;\n}\n\n.modal-content {\n    background-color: #fefefe;\n    margin: 15% auto;\n    padding: 20px;\n    border-radius: 8px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n    width: 80%;\n    max-width: 400px;\n}\n\n.modal-close-button {\n    color: #aaa;\n    float: right;\n    font-size: 28px;\n    font-weight: bold;\n    cursor: pointer;\n}\n\n.modal-close-button:hover {\n    color: black;\n}\n\n.profile-edit-form {\n    margin-top: 20px;\n}\n\n.profile-edit-actions {\n    display: flex;\n    justify-content: space-between;\n    margin-top: 15px;\n}\n\n#save-profile-button, #delete-profile-button {\n    padding: 8px 15px;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    font-size: 16px;\n}\n\n#save-profile-button {\n    background-color: #2ecc71;\n    color: white;\n}\n\n#save-profile-button:hover {\n    background-color: #27ae60;\n}\n\n#delete-profile-button {\n    background-color: #e74c3c;\n    color: white;\n}\n\n#delete-profile-button:hover {\n    background-color: #c0392b;\n}\n\n.icon-button {\n    width: 50px;\n    height: 50px;\n    border-radius: 50%;\n    padding: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 22px;\n}\n\n.icon-button:hover {\n    background-color: #34495e;\n}\n\n/* Add back styles for correct/incorrect feedback */\n.correct {\n    color: white;\n    background-color: #2ecc71;\n    box-shadow: 0 4px 8px rgba(46, 204, 113, 0.3);\n}\n\n.incorrect {\n    color: white;\n    background-color: #e74c3c;\n    box-shadow: 0 4px 8px rgba(231, 76, 60, 0.3);\n} `,""]);const h=d},601:e=>{e.exports=function(e){return e[1]}},659:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var i=void 0!==n.layer;i&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,i&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}}},t={};function n(o){var i=t[o];if(void 0!==i)return i.exports;var a=t[o]={id:o,exports:{}};return e[o](a,a.exports,n),a.exports}n.m=e,n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.b=document.baseURI||self.location.href,n.nc=void 0;const o=[{name:"F",position:1,isSpace:!0,clef:"treble",octave:4},{name:"A",position:2,isSpace:!0,clef:"treble",octave:4},{name:"C",position:3,isSpace:!0,clef:"treble",octave:5},{name:"E",position:4,isSpace:!0,clef:"treble",octave:5},{name:"E",position:1,isSpace:!1,clef:"treble",octave:4},{name:"G",position:2,isSpace:!1,clef:"treble",octave:4},{name:"B",position:3,isSpace:!1,clef:"treble",octave:4},{name:"D",position:4,isSpace:!1,clef:"treble",octave:5},{name:"F",position:5,isSpace:!1,clef:"treble",octave:5}],i=[{name:"A",position:1,isSpace:!0,clef:"bass",octave:2},{name:"C",position:2,isSpace:!0,clef:"bass",octave:3},{name:"E",position:3,isSpace:!0,clef:"bass",octave:3},{name:"G",position:4,isSpace:!0,clef:"bass",octave:3},{name:"G",position:1,isSpace:!1,clef:"bass",octave:2},{name:"B",position:2,isSpace:!1,clef:"bass",octave:2},{name:"D",position:3,isSpace:!1,clef:"bass",octave:3},{name:"F",position:4,isSpace:!1,clef:"bass",octave:3},{name:"A",position:5,isSpace:!1,clef:"bass",octave:3}],a=o.filter((e=>e.isSpace&&"treble"===e.clef)),s=[...o.filter((e=>!e.isSpace)),...i.filter((e=>e.isSpace)),...i.filter((e=>!e.isSpace))],r={requiredSuccessCount:10,maxTimePerProblem:5};class l{static generateLevels(){const e=[];e.push({id:1,name:"Treble Clef Spaces",description:"Learn the notes in the spaces of the treble clef (F, A, C, E)",clef:"treble",notes:a,...r});let t=[...a];for(let n=0;n<s.length;n++){const o=s[n],i=(n>0?s[n-1].clef:"treble")!==o.clef;e.push({id:n+2,name:i?`Introduction to ${o.clef.charAt(0).toUpperCase()+o.clef.slice(1)} Clef: ${o.name}`:`Learning ${o.name}`,description:`Learn the note ${o.name} on the ${o.clef} clef`,clef:o.clef,notes:[...t,o],newNote:o,learnedNotes:t,...r}),t=[...t,o]}return e.push({id:s.length+2,name:"Master Level",description:"Practice all notes on both the treble and bass clefs",clef:"treble",notes:[...o,...i],...r,requiredSuccessCount:15,maxTimePerProblem:4}),e}static get levels(){return this.generateLevels()}}l.NEW_NOTE_FREQUENCY=.2,l.LEVEL_CRITERIA=r;class c{constructor(e){this.currentNoteIndex=0,this.notePool=[],this.config=e,this.notes=[...e.notes],this.initializeNotePool()}getCurrentNote(){return this.notePool[this.currentNoteIndex]}getAvailableNotes(){return this.notes}nextNote(){const e=this.getCurrentNote();let t=(this.currentNoteIndex+1)%this.notePool.length;if(this.notePool.length>1)for(;this.isSameNote(e,this.notePool[t]);)t=(t+1)%this.notePool.length;this.currentNoteIndex=t}isSameNote(e,t){return e.name===t.name&&e.octave===t.octave&&e.accidental===t.accidental}isComplete(e){const t=this.config.requiredSuccessCount,n=this.config.maxTimePerProblem;if(e.length<t)return!1;const o=e.slice(-t),i=o.every((e=>e.isCorrect)),a=o.reduce(((e,t)=>e+t.timeSpent),0)/o.length;return i&&a<n}initializeNotePool(){if(this.notePool=[],this.config.newNote&&this.config.learnedNotes){const e=this.config.newNote,t=this.config.learnedNotes,n=100,o=Math.round(n*l.NEW_NOTE_FREQUENCY),i=n-o;for(let t=0;t<o;t++)this.notePool.push(e);if(t.length>0){const e=Math.floor(i/t.length);for(const n of t)for(let t=0;t<e;t++)this.notePool.push(n);const n=i-e*t.length;for(let e=0;e<n;e++)this.notePool.push(t[e%t.length])}}else this.notePool=[...this.notes];this.shuffleNotePool()}updateNotePool(e){const t=this.getCurrentNote();this.initializeNotePool();const n=[];for(const t of this.notes){const o=e[t.name];if(o&&o.incorrect>0){const e=o.incorrect/(o.correct+o.incorrect),i=Math.min(5,Math.ceil(10*e));for(let e=0;e<i;e++)n.push(t)}}this.notePool=[...this.notePool,...n],this.shuffleNotePool();const o=this.notePool.findIndex((e=>e.name===t.name&&e.clef===t.clef&&e.position===t.position));this.currentNoteIndex=o>=0?o:0}shuffleNotePool(){for(let e=this.notePool.length-1;e>0;e--){const t=Math.floor(Math.random()*(e+1));[this.notePool[e],this.notePool[t]]=[this.notePool[t],this.notePool[e]]}}}class d{constructor(e){this.width=700,this.height=300,this.lineSpacing=15,this.staffY=150,this.imagesLoaded=!1;const t=document.getElementById(e);if(!t)throw new Error(`Container element with id '${e}' not found`);this.container=t,this.canvas=document.createElement("canvas"),this.canvas.width=this.width,this.canvas.height=this.height;const n=this.canvas.getContext("2d");if(!n)throw new Error("Failed to get canvas context");this.ctx=n,this.container.appendChild(this.canvas),this.trebleClefImg=new Image,this.bassClefImg=new Image,this.trebleClefImg.onerror=e=>{console.error("Failed to load treble clef image:",e)},this.bassClefImg.onerror=e=>{console.error("Failed to load bass clef image:",e)};let o=0;const i=()=>{o++,console.log("Image loaded successfully:",o),2===o&&(this.imagesLoaded=!0,this.drawStaff(),console.log("Clef images loaded and staff drawn"))};this.trebleClefImg.onload=i,this.bassClefImg.onload=i;const a=["./imgs/treble_clef.png","../imgs/treble_clef.png","../../imgs/treble_clef.png","imgs/treble_clef.png","/imgs/treble_clef.png"];this.loadTrebleClefFromPaths(a,0);const s=a.map((e=>e.replace("treble","bass")));this.loadBassClefFromPaths(s,0),this.drawStaff()}loadTrebleClefFromPaths(e,t){t>=e.length?console.error("Failed to load treble clef from any path"):(console.log("Trying to load treble clef from:",e[t]),this.trebleClefImg.src=e[t],setTimeout((()=>{this.imagesLoaded||this.loadTrebleClefFromPaths(e,t+1)}),500))}loadBassClefFromPaths(e,t){t>=e.length?console.error("Failed to load bass clef from any path"):(console.log("Trying to load bass clef from:",e[t]),this.bassClefImg.src=e[t],setTimeout((()=>{this.imagesLoaded||this.loadBassClefFromPaths(e,t+1)}),500))}renderNote(e){this.clear(),this.drawStaff(),this.drawClef(e.clef),this.drawNote(e),console.log(`Rendering ${e.name}${e.octave||""} note on ${e.clef} clef`)}clear(){this.ctx.clearRect(0,0,this.width,this.height)}drawStaff(){this.ctx.strokeStyle="black",this.ctx.lineWidth=2;for(let e=0;e<5;e++){const t=this.staffY+(e-2)*this.lineSpacing*2;this.ctx.beginPath(),this.ctx.moveTo(70,t),this.ctx.lineTo(this.width-70,t),this.ctx.stroke()}}drawClef(e){this.imagesLoaded?"treble"===e?this.ctx.drawImage(this.trebleClefImg,80,this.staffY-65,50,130):this.ctx.drawImage(this.bassClefImg,80,this.staffY-45,50,90):console.log("Clef images not yet loaded")}drawNote(e){let t;e.clef,t=e.isSpace?this.staffY+(2-e.position)*this.lineSpacing*2+this.lineSpacing:this.staffY+(2-e.position+1)*this.lineSpacing*2;const n=this.width/2;if(this.ctx.fillStyle="black",this.ctx.beginPath(),this.ctx.ellipse(n,t,11.5,11.5,0,0,2*Math.PI),this.ctx.fill(),this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.moveTo(n+11,t),this.ctx.lineTo(n+11,t-50),this.ctx.stroke(),e.accidental){this.ctx.fillStyle="black",this.ctx.font="28px Arial";let o="";switch(e.accidental){case"sharp":o="♯";break;case"flat":o="♭";break;case"natural":o="♮"}this.ctx.fillText(o,n-35,t+7)}}areImagesLoaded(){return this.imagesLoaded}}class p{constructor(e){this.storageKey=e}saveState(e){try{const t=JSON.stringify(e);localStorage.setItem(this.storageKey,t)}catch(e){console.error("Failed to save game state:",e)}}loadState(){try{const e=localStorage.getItem(this.storageKey);if(null===e)return null;const t=JSON.parse(e);return this.isValidGameState(t)?t:(console.warn("Invalid game state found in storage, clearing..."),this.clearState(),null)}catch(e){return console.error("Failed to load game state, clearing corrupt data:",e),this.clearState(),null}}isValidGameState(e){return!(!e||"object"!=typeof e||"number"!=typeof e.currentLevelIndex||"boolean"!=typeof e.isGameRunning||!e.noteHistory||"object"!=typeof e.noteHistory||(e.recentAttempts||(e.recentAttempts=[]),Array.isArray(e.recentAttempts)||(e.recentAttempts=[]),0))}clearState(){try{localStorage.removeItem(this.storageKey)}catch(e){console.error("Failed to clear game state:",e)}}}const h={treble:{C6:{position:8,isSpace:!1},B5:{position:7,isSpace:!0},A5:{position:7,isSpace:!1},G5:{position:6,isSpace:!0},F5:{position:5,isSpace:!1},E5:{position:4,isSpace:!0},D5:{position:4,isSpace:!1},C5:{position:3,isSpace:!0},B4:{position:3,isSpace:!1},A4:{position:2,isSpace:!0},G4:{position:2,isSpace:!1},F4:{position:1,isSpace:!0},E4:{position:1,isSpace:!1},D4:{position:0,isSpace:!0},C4:{position:0,isSpace:!1}},bass:{B3:{position:6,isSpace:!0},A3:{position:5,isSpace:!1},G3:{position:4,isSpace:!0},F3:{position:4,isSpace:!1},E3:{position:3,isSpace:!0},D3:{position:3,isSpace:!1},C3:{position:2,isSpace:!0},B2:{position:2,isSpace:!1},A2:{position:1,isSpace:!0},G2:{position:1,isSpace:!1},F2:{position:0,isSpace:!0},E2:{position:0,isSpace:!1},D2:{position:-1,isSpace:!0},C2:{position:-1,isSpace:!1}}};class u{static getInstance(){return u.instance||(u.instance=new u),u.instance}constructor(){this.notes=new Map,this.initializeNotes()}initializeNotes(){const e=["C","D","E","F","G","A","B"];for(let t=2;t<=6;t++)for(const n of e){if(6===t&&"C"!==n)continue;const e=t<4?"bass":"treble",o=h[e][`${n}${t}`];if(!o)continue;const i={name:n,position:o.position,isSpace:o.isSpace,octave:t,clef:e};if(this.notes.set(this.getNoteKey(n,void 0,t),i),"E"!==n&&"B"!==n){const i={name:n,position:o.position,isSpace:o.isSpace,octave:t,clef:e,accidental:"sharp"};this.notes.set(this.getNoteKey(n,"sharp",t),i)}}}getNoteKey(e,t,n){return`${e}${t||""}${n}`}getNote(e,t,n){return this.notes.get(this.getNoteKey(e,t,n))}getAllNotes(){return Array.from(this.notes.values())}getNotesByClef(e){return Array.from(this.notes.values()).filter((t=>t.clef===e))}getNotesInRange(e,t){return Array.from(this.notes.values()).filter((n=>n.octave>=e&&n.octave<=t))}}class f{constructor(e){this.showNoteNames=!0,this.showAllKeys=!1,this.currentClef="treble",this.whiteKeys=["C","D","E","F","G","A","B"],this.blackKeys=["C#","D#","F#","G#","A#"],this.trebleClefStartOctave=4,this.bassClefStartOctave=2,this.middleC=4;const t=document.getElementById(e);if(!t)throw new Error(`Container element with id '${e}' not found`);this.container=t,this.noteRepository=u.getInstance()}setCurrentClef(e){this.currentClef=e}renderKeyboard(e,t,n){this.container.innerHTML="",n&&(this.currentClef=n);const o=document.createElement("div");o.className="keyboards-container";const i="treble"===this.currentClef,a=i?"Treble Clef (C4-C6)":"Bass Clef (C2-C4)",s=i?this.trebleClefStartOctave:this.bassClefStartOctave,r=document.createElement("div");r.className="piano-keyboard",r.dataset.clef=this.currentClef;const l=document.createElement("div");l.className="keyboard-label",l.textContent=a,r.appendChild(l);const c=this.createKeyboardKeys(s,e,t);r.appendChild(c),o.appendChild(r),this.container.appendChild(o)}createKeyboardKeys(e,t,n){const o=document.createElement("div");o.className="keyboard-keys";const i=document.createElement("div");i.className="octave",this.createOctaveKeys(i,e,t,n),o.appendChild(i);const a=document.createElement("div");a.className="octave",this.createOctaveKeys(a,e+1,t,n),o.appendChild(a);const s=document.createElement("div");s.className="octave third-octave";const r=e+2;return this.createPianoKey(s,"C",r,t,n,"white-key"),o.appendChild(s),o}createOctaveKeys(e,t,n,o){for(const i of this.whiteKeys)this.createPianoKey(e,i,t,n,o,"white-key");for(const i of this.blackKeys){const a=i.charAt(0),s=this.createPianoKey(e,a,t,n,o,"black-key","sharp");switch(a){case"C":s.style.left="10%";break;case"D":s.style.left="24%";break;case"F":s.style.left="53%";break;case"G":s.style.left="67%";break;case"A":s.style.left="81%"}}}createPianoKey(e,t,n,o,i,a,s){const r=document.createElement("div");r.className=`piano-key ${a}`,"C"!==t||n!==this.middleC||s||r.classList.add("middle-c");const l=this.noteRepository.getNote(t,s,n);if(!l)return r;const c=this.findMatchingNote(l,o);if(this.showAllKeys||c?(r.classList.add("selectable"),r.addEventListener("click",(()=>i(l)))):r.classList.add("disabled"),this.showNoteNames&&"white-key"===a){const e=document.createElement("span");e.className="note-name",e.textContent=t,r.appendChild(e)}return e.appendChild(r),r}findMatchingNote(e,t){return t.find((t=>{const n=t.name.toLowerCase()===e.name.toLowerCase(),o=t.octave===e.octave,i=t.accidental===e.accidental||!t.accidental&&!e.accidental;return n&&o&&i}))}toggleNoteNames(){this.showNoteNames=!this.showNoteNames}toggleShowAllKeys(){this.showAllKeys=!this.showAllKeys}}class m{constructor(e){this.storageKey=e+"-profiles",this.profilesState=this.loadProfilesState()||{activeProfileId:null,profiles:[]}}loadProfilesState(){try{const e=localStorage.getItem(this.storageKey);if(!e)return null;const t=JSON.parse(e);return this.isValidProfilesState(t)?t:(console.warn("Invalid profiles state found in storage, resetting..."),null)}catch(e){return console.error("Failed to load profiles state:",e),null}}isValidProfilesState(e){if(!e||"object"!=typeof e)return!1;if(!Array.isArray(e.profiles))return!1;for(const t of e.profiles){if(!t.id||!t.name||!t.gameState)return!1;if("number"!=typeof t.createdAt||"number"!=typeof t.lastUsed)return!1;t.displayPreferences||(t.displayPreferences={showNoteNames:!0,showAllNotes:!1})}return!0}saveProfilesState(){try{const e=JSON.stringify(this.profilesState);localStorage.setItem(this.storageKey,e)}catch(e){console.error("Failed to save profiles state:",e)}}createProfile(e){const t=Date.now().toString(36)+Math.random().toString(36).substr(2),n=Date.now(),o={id:t,name:e,gameState:{currentLevelIndex:0,isGameRunning:!1,noteHistory:{},recentAttempts:[]},createdAt:n,lastUsed:n,displayPreferences:{showNoteNames:!0,showAllNotes:!1}};return this.profilesState.profiles.push(o),this.profilesState.activeProfileId||(this.profilesState.activeProfileId=t),this.saveProfilesState(),o}removeProfile(e){const t=this.profilesState.profiles.length;return this.profilesState.profiles=this.profilesState.profiles.filter((t=>t.id!==e)),this.profilesState.activeProfileId===e&&(this.profilesState.activeProfileId=this.profilesState.profiles.length>0?this.profilesState.profiles[0].id:null),this.saveProfilesState(),t!==this.profilesState.profiles.length}updateProfileName(e,t){const n=this.profilesState.profiles.find((t=>t.id===e));return!!n&&(n.name=t,this.saveProfilesState(),!0)}setActiveProfile(e){const t=this.profilesState.profiles.find((t=>t.id===e));return!!t&&(this.profilesState.activeProfileId=e,t.lastUsed=Date.now(),this.saveProfilesState(),!0)}getActiveProfile(){return this.profilesState.activeProfileId&&this.profilesState.profiles.find((e=>e.id===this.profilesState.activeProfileId))||null}updateActiveProfileGameState(e){const t=this.getActiveProfile();return!!t&&(t.gameState=e,t.lastUsed=Date.now(),this.saveProfilesState(),!0)}getAllProfiles(){return[...this.profilesState.profiles]}clearAllProfiles(){this.profilesState={activeProfileId:null,profiles:[]},this.saveProfilesState()}updateActiveProfileDisplayPreferences(e){const t=this.getActiveProfile();return!!t&&(t.displayPreferences||(t.displayPreferences={showNoteNames:!0,showAllNotes:!1}),t.displayPreferences={...t.displayPreferences,...e},t.lastUsed=Date.now(),this.saveProfilesState(),!0)}getActiveProfileDisplayPreferences(){const e=this.getActiveProfile();return e?(e.displayPreferences||(e.displayPreferences={showNoteNames:!0,showAllNotes:!1},this.saveProfilesState()),e.displayPreferences):null}isValidGameState(e){return!(!e||"object"!=typeof e||"number"!=typeof e.currentLevelIndex||"boolean"!=typeof e.isGameRunning||!e.noteHistory||"object"!=typeof e.noteHistory||(e.recentAttempts||(e.recentAttempts=[]),Array.isArray(e.recentAttempts)||(e.recentAttempts=[]),0))}}class g{constructor(){this.audioContext=null,this.isInitialized=!1}static getInstance(){return g.instance||(g.instance=new g),g.instance}initialize(){if(!this.isInitialized)try{this.audioContext=new AudioContext,this.isInitialized=!0,"suspended"===this.audioContext.state&&this.audioContext.resume()}catch(e){console.error("Failed to initialize AudioContext:",e)}}testSound(){if(this.audioContext||this.initialize(),this.audioContext){"suspended"===this.audioContext.state&&this.audioContext.resume();try{const e=this.audioContext.createOscillator(),t=this.audioContext.createGain();e.type="sine",e.frequency.setValueAtTime(440,this.audioContext.currentTime),t.gain.setValueAtTime(0,this.audioContext.currentTime),t.gain.linearRampToValueAtTime(.5,this.audioContext.currentTime+.01),t.gain.exponentialRampToValueAtTime(.01,this.audioContext.currentTime+.5),e.connect(t),t.connect(this.audioContext.destination),e.start(),e.stop(this.audioContext.currentTime+.5)}catch(e){console.error("Error playing test sound:",e)}}}playNote(e,t){if(this.audioContext||this.initialize(),this.audioContext){"suspended"===this.audioContext.state&&this.audioContext.resume();try{const n=this.audioContext.createOscillator(),o=this.audioContext.createGain(),i=this.getNoteFrequency(e,t);n.type="sine",n.frequency.setValueAtTime(i,this.audioContext.currentTime),o.gain.setValueAtTime(0,this.audioContext.currentTime),o.gain.linearRampToValueAtTime(.5,this.audioContext.currentTime+.01),o.gain.exponentialRampToValueAtTime(.01,this.audioContext.currentTime+1.5),n.connect(o),o.connect(this.audioContext.destination),n.start(),n.stop(this.audioContext.currentTime+1.5)}catch(e){console.error("Error playing note:",e)}}}playErrorSound(){if(this.audioContext||this.initialize(),this.audioContext){"suspended"===this.audioContext.state&&this.audioContext.resume();try{const e=this.audioContext.createOscillator(),t=this.audioContext.createGain();e.type="sine",e.frequency.setValueAtTime(80,this.audioContext.currentTime),t.gain.setValueAtTime(0,this.audioContext.currentTime),t.gain.linearRampToValueAtTime(.6,this.audioContext.currentTime+.02),t.gain.exponentialRampToValueAtTime(.01,this.audioContext.currentTime+.5),e.connect(t),t.connect(this.audioContext.destination),e.start(),e.stop(this.audioContext.currentTime+.5)}catch(e){console.error("Error playing error sound:",e)}}}getNoteFrequency(e,t){const n=12*(t-4)+(({C:0,"C#":1,Db:1,D:2,"D#":3,Eb:3,E:4,F:5,"F#":6,Gb:6,G:7,"G#":8,Ab:8,A:9,"A#":10,Bb:10,B:11}[e]||0)-9);return 440*Math.pow(2,n/12)}}const b=[{name:"Mickey Mouse",messages:["Hot dog! You're on a roll!","Oh boy! Keep up the great work!","Gosh, you're getting good at this!"],avatar:"./imgs/mickeymouse.jpg"},{name:"SpongeBob",messages:["I'm ready! You're ready! For more notes!","Sweet victory! Keep it up!","That's the spirit! You're doing great!"],avatar:"./imgs/spongebob.png"},{name:"Bugs Bunny",messages:["Eh, what's up, Doc? Nice streak you got there!","That's all folks... Just kidding, keep going!","You're doing swell, Doc!"],avatar:"./imgs/bugsbunny.jpg"},{name:"Pikachu",messages:["Pika Pika! You're electrifying!","Pikachu is impressed by your skills!","Pika Pi! You're on fire!"],avatar:"./imgs/pikachu.jpg"},{name:"Homer Simpson",messages:["Woo hoo! Four correct notes!","Mmm... musical notes...","D'oh! I mean... Bravo!"],avatar:"./imgs/homersimpson.jpg"}];class x{constructor(){this.currentLevel=null,this.profileNameElement=null,this.levelNameElement=null,this.noteDisplayTime=0,this.lastStreakAnimation=0,this.characterElement=null,this.state={currentLevelIndex:0,isGameRunning:!1,noteHistory:{},recentAttempts:[]},this.noteRepository=u.getInstance(),this.audioPlayer=g.getInstance(),this.sheetRenderer=new d("sheet-music"),this.keyboardRenderer=new f("note-options"),this.storageManager=new p("music-reading-game"),this.profileManager=new m("music-reading-game"),this.noteOptionsContainer=document.getElementById("note-options"),this.feedbackElement=document.getElementById("feedback"),this.streakElement=document.getElementById("streak-value"),this.speedElement=document.getElementById("speed-value"),this.streakRequiredElement=document.getElementById("streak-required"),this.speedRequiredElement=document.getElementById("speed-required"),this.profileNameElement=document.getElementById("profile-name"),this.levelNameElement=document.getElementById("level-name");const e=this.profileManager.getActiveProfile();e?(console.log("Loaded profile:",e.name),this.state=e.gameState,this.applyDisplayPreferences(),this.state.isGameRunning&&this.waitForImagesAndStartGame()):this.createDefaultProfile(),this.updateStats(),this.updateProfileDisplay(),document.addEventListener("click",(()=>{this.audioPlayer&&this.audioPlayer.initialize()}),{once:!0})}createDefaultProfile(){const e=this.profileManager.createProfile("Player 1");this.state=e.gameState,console.log("Created default profile:",e.name)}getAllProfiles(){const e=this.profileManager.getAllProfiles(),t=this.profileManager.getActiveProfile();return e.map((e=>({id:e.id,name:e.name,isActive:!!t&&e.id===t.id,lastUsed:e.lastUsed})))}getActiveProfile(){const e=this.profileManager.getActiveProfile();return e?{id:e.id,name:e.name,displayPreferences:e.displayPreferences}:null}createProfile(e){this.profileManager.createProfile(e),this.updateProfileDisplay()}removeProfile(e){this.profileManager.removeProfile(e);const t=this.profileManager.getActiveProfile();t&&(this.state=t.gameState,this.updateStats()),this.updateProfileDisplay()}updateProfileName(e,t){this.profileManager.updateProfileName(e,t),this.updateProfileDisplay()}setActiveProfile(e){if(this.profileManager.setActiveProfile(e)){const e=this.profileManager.getActiveProfile();e&&(this.state=e.gameState,this.applyDisplayPreferences(),this.state.isGameRunning?this.waitForImagesAndStartGame():(this.clearFeedback(),this.clearNoteOptions(),this.sheetRenderer.clear(),document.dispatchEvent(new CustomEvent("gameStateChanged",{detail:{isRunning:!1}}))),this.updateStats(),this.updateProfileDisplay())}}updateProfileDisplay(){if(this.profileNameElement){const e=this.profileManager.getActiveProfile();this.profileNameElement.textContent=e?e.name:"No Profile"}if(this.levelNameElement){const e=l.levels[this.state.currentLevelIndex];this.levelNameElement.textContent=e?`Level ${this.state.currentLevelIndex+1}: ${e.name}`:"No Level"}}start(){this.state.isGameRunning||(this.audioPlayer.initialize(),this.state.isGameRunning=!0,this.saveState(),this.waitForImagesAndStartGame())}setLevel(e){e<0||e>=l.levels.length?console.error(`Level ${e} does not exist.`):(this.state.currentLevelIndex=e,this.state.recentAttempts=[],this.saveState(),this.updateProfileDisplay(),this.state.isGameRunning&&this.loadLevel(e))}isGameRunning(){return this.state.isGameRunning}saveState(){this.profileManager.updateActiveProfileGameState(this.state),this.storageManager.saveState(this.state)}reset(){console.log("Resetting game and clearing storage..."),this.state={currentLevelIndex:0,isGameRunning:!1,noteHistory:{},recentAttempts:[]},this.saveState(),this.updateStats(),this.updateProfileDisplay(),this.clearFeedback(),this.clearNoteOptions(),this.sheetRenderer.clear(),document.dispatchEvent(new CustomEvent("gameStateChanged",{detail:{isRunning:!1}})),console.log("Game reset complete.")}resetAllProfiles(){this.profileManager.clearAllProfiles(),this.createDefaultProfile(),this.reset()}loadLevel(e){const t=l.levels;if(e<0||e>=t.length)return void console.error(`Level ${e} does not exist.`);const n=t[e];console.log(`Loading level ${e+1}: ${n.name}`),this.currentLevel=new c(n),n.newNote&&!this.state.noteHistory[n.newNote.name]&&(this.state.noteHistory[n.newNote.name]={correct:0,incorrect:0}),this.currentLevel&&this.currentLevel.updateNotePool(this.state.noteHistory),this.displayCurrentNote(),this.updateLevelRequirements(),this.updateProfileDisplay()}displayCurrentNote(){if(!this.currentLevel)return;const e=this.currentLevel.getCurrentNote();this.sheetRenderer.renderNote(e),this.renderNoteOptions(),this.noteDisplayTime=Date.now()}renderNoteOptions(){if(this.clearNoteOptions(),!this.currentLevel)return;const e=this.currentLevel.getAvailableNotes(),t=this.currentLevel.getCurrentNote();this.keyboardRenderer.renderKeyboard(e,(e=>{this.checkAnswer(e)}),t.clef)}checkAnswer(e){if(!this.currentLevel)return;const t=this.currentLevel.getCurrentNote(),n=t.name===e.name,o=t.octave===e.octave,i=n&&o;i?this.audioPlayer.playNote(t.name,t.octave):this.audioPlayer.playErrorSound(),this.state.noteHistory[t.name]||(this.state.noteHistory[t.name]={correct:0,incorrect:0});const a=Date.now(),s=(a-this.noteDisplayTime)/1e3;this.state.recentAttempts||(this.state.recentAttempts=[]),this.state.recentAttempts.push({isCorrect:i,timeSpent:s,timestamp:a}),i?(this.state.noteHistory[t.name].correct+=1,this.showFeedback(!0,`Correct! That's ${t.name}${t.octave}`)):(this.state.noteHistory[t.name].incorrect+=1,n?o||this.showFeedback(!1,`Incorrect. Right note name (${t.name}), but wrong octave. It was ${t.name}${t.octave}, you selected ${e.name}${e.octave}`):this.showFeedback(!1,`Incorrect. That was ${t.name}${t.octave}, not ${e.name}${e.octave}`)),this.updateStats(),this.saveState(),setTimeout((()=>{this.moveToNextNote()}),100)}moveToNextNote(){this.currentLevel&&(this.state.recentAttempts&&this.currentLevel.isComplete(this.state.recentAttempts)?this.levelUp():(this.currentLevel.nextNote(),this.displayCurrentNote()))}levelUp(){if(this.state.currentLevelIndex++,this.state.recentAttempts=[],this.saveState(),this.updateProfileDisplay(),this.state.currentLevelIndex<l.levels.length){const e=l.levels[this.state.currentLevelIndex];this.showFeedback(!0,`Level Up! Moving to level ${this.state.currentLevelIndex+1}: ${e.name}`),setTimeout((()=>{this.loadLevel(this.state.currentLevelIndex)}),2e3)}else this.showFeedback(!0,"Congratulations! You've completed all levels!"),this.state.isGameRunning=!1}showFeedback(e,t){this.feedbackElement.textContent=t,this.feedbackElement.className=e?"correct":"incorrect",this.feedbackElement.classList.remove("active"),this.feedbackElement.offsetWidth,this.feedbackElement.classList.add("active"),e&&this.showCelebration()}showCelebration(){const e=document.querySelector(".celebration-container");if(e){e.innerHTML="";for(let t=0;t<20;t++){const t=document.createElement("div");t.className="confetti-piece",t.style.left=100*Math.random()+"%",t.style.width=5+10*Math.random()+"px",t.style.height=10+15*Math.random()+"px",t.style.backgroundColor=this.getRandomColor(),t.style.animationDelay=.5*Math.random()+"s",t.style.animationDuration=1+2*Math.random()+"s",e.appendChild(t)}for(let t=0;t<5;t++){const t=document.createElement("div");t.className="star",t.style.left=100*Math.random()+"%",t.style.top=100*Math.random()+"%",t.style.animationDelay=.5*Math.random()+"s",e.appendChild(t)}setTimeout((()=>{e.innerHTML=""}),3e3)}}getRandomColor(){const e=["#3498db","#e74c3c","#2ecc71","#f39c12","#9b59b6","#1abc9c"];return e[Math.floor(Math.random()*e.length)]}clearFeedback(){this.feedbackElement.textContent="",this.feedbackElement.className=""}calculateCurrentStreak(){if(!this.state.recentAttempts||0===this.state.recentAttempts.length)return 0;let e=0;for(let t=this.state.recentAttempts.length-1;t>=0&&this.state.recentAttempts[t].isCorrect;t--)e++;return e}calculateAverageSpeed(){if(!this.state.recentAttempts||0===this.state.recentAttempts.length)return 0;const e=l.levels[this.state.currentLevelIndex],t=e?.requiredSuccessCount||l.LEVEL_CRITERIA.requiredSuccessCount,n=this.state.recentAttempts.slice(-t);return n.reduce(((e,t)=>e+t.timeSpent),0)/n.length}updateStats(){const e=this.calculateCurrentStreak();this.streakElement&&(this.streakElement.textContent=e.toString());const t=this.calculateAverageSpeed();if(this.speedElement&&(this.speedElement.textContent=t.toFixed(1)),this.updateVisualFeedback(),4===e){const e=Date.now();e-this.lastStreakAnimation>5e3&&(this.showCartoonCharacter(),this.lastStreakAnimation=e)}}updateLevelRequirements(){if(!this.currentLevel)return;const e=l.levels[this.state.currentLevelIndex],t=e?.requiredSuccessCount||l.LEVEL_CRITERIA.requiredSuccessCount,n=e?.maxTimePerProblem||l.LEVEL_CRITERIA.maxTimePerProblem;this.streakRequiredElement&&(this.streakRequiredElement.textContent=t.toString()),this.speedRequiredElement&&(this.speedRequiredElement.textContent=n.toString())}updateVisualFeedback(){if(!this.streakElement||!this.speedElement)return;const e=this.calculateCurrentStreak(),t=this.calculateAverageSpeed(),n=l.levels[this.state.currentLevelIndex],o=n?.requiredSuccessCount||l.LEVEL_CRITERIA.requiredSuccessCount,i=n?.maxTimePerProblem||l.LEVEL_CRITERIA.maxTimePerProblem;this.streakElement.className=e>=o?"stats-value goal-met":e>=o/2?"stats-value progress":"stats-value",this.speedElement.className=t>0&&t<i?"stats-value goal-met":t>0&&t<1.5*i?"stats-value progress":"stats-value"}clearNoteOptions(){this.noteOptionsContainer.innerHTML=""}showCartoonCharacter(){this.removeCharacterElement();const e=b[Math.floor(Math.random()*b.length)],t=e.messages[Math.floor(Math.random()*e.messages.length)];this.characterElement=document.createElement("div"),this.characterElement.className="cartoon-character-popup";const n=`\n            <div class="character-avatar">\n                <img src="${e.avatar}" alt="${e.name}">\n            </div>\n            <div class="character-content">\n                <h3>${e.name}</h3>\n                <p>${t}</p>\n            </div>\n        `;this.characterElement.innerHTML=n,document.body.appendChild(this.characterElement),setTimeout((()=>{this.characterElement&&this.characterElement.classList.add("visible")}),10),setTimeout((()=>{this.removeCharacterElement()}),9e3)}removeCharacterElement(){this.characterElement&&document.body.contains(this.characterElement)&&(this.characterElement.classList.remove("visible"),setTimeout((()=>{this.characterElement&&document.body.contains(this.characterElement)&&(document.body.removeChild(this.characterElement),this.characterElement=null)}),500))}applyDisplayPreferences(){const e=this.profileManager.getActiveProfileDisplayPreferences();e&&this.keyboardRenderer&&("boolean"==typeof e.showNoteNames&&(this.keyboardRenderer.showNoteNames=e.showNoteNames),"boolean"==typeof e.showAllNotes&&(this.keyboardRenderer.showAllKeys=e.showAllNotes))}updateDisplayPreferences(e){const t=this.profileManager.getActiveProfileDisplayPreferences()||{showNoteNames:!0,showAllNotes:!1},n={showNoteNames:void 0!==e.showNoteNames?e.showNoteNames:t.showNoteNames,showAllNotes:void 0!==e.showAllNotes?e.showAllNotes:t.showAllNotes};this.profileManager.updateActiveProfileDisplayPreferences(n)}getDisplayPreferences(){return this.profileManager.getActiveProfileDisplayPreferences()||{showNoteNames:!0,showAllNotes:!1}}waitForImagesAndStartGame(){this.sheetRenderer.areImagesLoaded()?(this.loadLevel(this.state.currentLevelIndex),console.log("Game started at level",this.state.currentLevelIndex+1),this.updateLevelRequirements(),document.dispatchEvent(new CustomEvent("gameStateChanged",{detail:{isRunning:!0}}))):(console.log("Waiting for clef images to load before starting game..."),setTimeout((()=>{this.waitForImagesAndStartGame()}),100))}}var v=n(72),y=n.n(v),w=n(825),C=n.n(w),k=n(659),N=n.n(k),S=n(56),P=n.n(S),E=n(540),A=n.n(E),L=n(113),I=n.n(L),T=n(552),M={};M.styleTagTransform=I(),M.setAttributes=P(),M.insert=N().bind(null,"head"),M.domAPI=C(),M.insertStyleElement=A(),y()(T.A,M),T.A&&T.A.locals&&T.A.locals,document.addEventListener("DOMContentLoaded",(()=>{const e=new x,t=new p("music-reading-game"),n=(g.getInstance(),document.getElementById("start-button")),o=document.getElementById("reset-button"),i=document.getElementById("clear-storage-button"),a=document.getElementById("stats-button"),s=document.getElementById("toggle-names-button"),r=document.getElementById("toggle-all-keys-button"),c=document.getElementById("profiles-list"),d=document.getElementById("new-profile-name"),h=document.getElementById("add-profile-button");let u=null;const f=document.getElementById("stats-popup"),m=document.querySelector(".close-button"),b=document.getElementById("learned-notes-list"),v=document.getElementById("levels-list"),y=document.getElementById("level-selection");function w(){e.isGameRunning()?n.style.display="none":n.style.display="block"}function C(e,t){c.querySelectorAll(".profile-item").forEach((t=>{t!==e&&t.classList.remove("editing")})),t?e.classList.add("editing"):(e.classList.remove("editing"),u=null)}function k(t,n){const o=n.value.trim();o&&(e.updateProfileName(t,o),N())}function N(){c.innerHTML="";const t=e.getAllProfiles();0!==t.length?(t.sort(((e,t)=>t.lastUsed-e.lastUsed)),t.forEach((t=>{const n=document.createElement("div");n.className="profile-item "+(t.isActive?"active":"");const o=document.createElement("span");o.className="profile-name",o.textContent=t.name;const i=document.createElement("button");i.className="profile-edit-button",i.textContent="Edit";const a=document.createElement("div");a.className="profile-edit-form-inline";const s=document.createElement("input");s.type="text",s.className="edit-profile-input",s.value=t.name,s.placeholder="Profile name";const r=document.createElement("div");r.className="profile-edit-actions";const l=document.createElement("button");l.className="save-profile-button",l.textContent="Save";const d=document.createElement("button");d.className="delete-profile-button danger",d.textContent="Delete";const p=document.createElement("button");p.className="cancel-edit-button",p.textContent="Cancel",i.addEventListener("click",(e=>{e.stopPropagation(),u=t.id,C(n,!0)})),l.addEventListener("click",(e=>{e.stopPropagation(),k(t.id,s),C(n,!1)})),d.addEventListener("click",(n=>{var o;n.stopPropagation(),o=t.id,confirm("Are you sure you want to delete this profile? All progress will be lost.")&&(e.removeProfile(o),N())})),p.addEventListener("click",(e=>{e.stopPropagation(),C(n,!1)})),s.addEventListener("keydown",(e=>{"Enter"===e.key&&(k(t.id,s),C(n,!1))})),r.appendChild(l),r.appendChild(p),r.appendChild(d),a.appendChild(s),a.appendChild(r),n.appendChild(o),n.appendChild(i),n.appendChild(a),n.addEventListener("click",(o=>{const i=o.target;n.classList.contains("editing")||"BUTTON"===i.tagName||"INPUT"===i.tagName||t.isActive||(e.setActiveProfile(t.id),N())})),c.appendChild(n)}))):c.innerHTML='<p class="no-profiles">No profiles available</p>'}w(),document.addEventListener("gameStateChanged",(e=>{w()})),n.addEventListener("click",(()=>{e.start(),w()})),o.addEventListener("click",(()=>{confirm("This will reset your current profile progress. Are you sure?")&&(e.reset(),w(),f.classList.remove("active"))})),i.addEventListener("click",(()=>{confirm("This will reset all profiles and game progress. Are you sure?")&&(e.resetAllProfiles(),alert("All profiles and game progress have been reset!"),f.classList.remove("active"))})),s.addEventListener("click",(()=>{const t=e.keyboardRenderer;if(t){t.toggleNoteNames();const n=t.showNoteNames;if(s.textContent=n?"Hide Note Names":"Show Note Names",e.updateDisplayPreferences({showNoteNames:n}),e.isGameRunning()){const n=e.currentLevel;if(n){const o=n.getAvailableNotes();t.renderKeyboard(o,(t=>{e.checkAnswer(t)}),n.getCurrentNote().clef)}}}})),r.addEventListener("click",(()=>{const t=e.keyboardRenderer;if(t){t.toggleShowAllKeys();const n=t.showAllKeys;if(r.textContent=n?"Hide Unavailable Notes":"Show All Notes",e.updateDisplayPreferences({showAllNotes:n}),e.isGameRunning()){const n=e.currentLevel;if(n){const o=n.getAvailableNotes();t.renderKeyboard(o,(t=>{e.checkAnswer(t)}),n.getCurrentNote().clef)}}}})),a.addEventListener("click",(()=>{N(),function(){b.innerHTML="";const e=t.loadState();if(!e)return void(b.innerHTML="<p>Start the game to see learned notes!</p>");const n=e.currentLevelIndex,o=l.levels;if(n<0||n>=o.length)return void(b.innerHTML="<p>No notes learned yet.</p>");const i=o[n];let a=[];0===n?a=i.notes:i.learnedNotes?(a=[...i.learnedNotes],i.newNote&&a.push(i.newNote)):a=i.notes;const s=a.filter((e=>"treble"===e.clef)),r=a.filter((e=>"bass"===e.clef));if(s.length>0){const e=document.createElement("div");e.className="note-group",e.innerHTML=`\n                <h4>Treble Clef Notes</h4>\n                <div class="level-notes">\n                    ${s.map((e=>`<span class="note-tag">${e.name}${e.octave}</span>`)).join("")}\n                </div>\n            `,b.appendChild(e)}if(r.length>0){const e=document.createElement("div");e.className="note-group",e.innerHTML=`\n                <h4>Bass Clef Notes</h4>\n                <div class="level-notes">\n                    ${r.map((e=>`<span class="note-tag">${e.name}${e.octave}</span>`)).join("")}\n                </div>\n            `,b.appendChild(e)}0===s.length&&0===r.length&&(b.innerHTML="<p>No notes learned yet.</p>")}(),function(){v.innerHTML="";const e=l.levels,n=t.loadState(),o=n?n.currentLevelIndex:-1;e.forEach(((e,t)=>{const n=document.createElement("div");n.className="level-item",t===o&&(n.style.borderLeftColor="#e74c3c");const i=e.notes.map((t=>`<span class="note-tag ${e.newNote&&t.name===e.newNote.name&&t.clef===e.newNote.clef&&t.position===e.newNote.position&&t.octave===e.newNote.octave?"new":""}">${t.name}${t.octave} (${t.clef})</span>`)).join("");n.innerHTML=`\n                <div class="level-title">Level ${e.id}: ${e.name} ${t===o?"(Current)":""}</div>\n                <div class="level-description">${e.description}</div>\n                <div class="level-notes">\n                    ${i}\n                </div>\n            `,v.appendChild(n)}))}(),function(){y.innerHTML="";const n=t.loadState(),o=n?n.currentLevelIndex:0;l.levels.forEach(((t,n)=>{const i=document.createElement("button");i.className="level-button",n===o&&i.classList.add("current"),i.textContent=`Level ${n+1}: ${t.name}`,i.addEventListener("click",(()=>{e.setLevel(n),f.classList.remove("active"),e.isGameRunning()||(e.start(),w())})),y.appendChild(i)}))}(),function(){const t=e.getActiveProfile();if(t&&t.displayPreferences){const{showNoteNames:e,showAllNotes:n}=t.displayPreferences;s.textContent=e?"Hide Note Names":"Show Note Names",r.textContent=n?"Hide Unavailable Notes":"Show All Notes"}}(),f.classList.add("active")})),m.addEventListener("click",(()=>{f.classList.remove("active")})),h.addEventListener("click",(()=>{const t=d.value.trim();t&&(e.createProfile(t),d.value="",N())})),N()}))})();